<?php
/**
 * Del001_AdminUiColorSwap extension.
 *
 * @category   Admin
 * @package    Del001_AdminUiColorSwap
 * @author     https://github.com/nmarcy-del
 * @copyright  Copyright (c) 2022 https://github.com/nmarcy-del
 */

use Del001\AdminUiColorSwap\Block\Adminhtml\Theme;
use Magento\Framework\Escaper;

/**
 * @var Theme $block
 * @var Escaper $escaper
 */

$cssPath = $block->getViewFileUrl($block->getModuleName() . '/css');
$isEnabled = $block->isUsedPresetTheme() || $block->isUsedCustomTheme();
$selectedTheme = $block->selectedTheme();
// Custom theme colors
$mainColor = $escaper->escapeHtml($block->getCustomMainColor());
$secondaryColor = $escaper->escapeHtml($block->getCustomSecondaryColor());
$tertiaryColor = $escaper->escapeHtml($block->getCustomTertiaryColor());
// Custom theme fonts colors
$fontMain = $escaper->escapeHtml($block->getCustomFontMainColor());
$fontSecondary = $escaper->escapeHtml($block->getCustomFontSecondaryColor());
?>
<script>
    const loadCss = (url) => {
        let linkElement = document.createElement('link')
        linkElement.rel = 'stylesheet';
        linkElement.type = 'text/css';
        linkElement.href =  url;
        document.getElementsByTagName('head')[0].appendChild(linkElement);
    }

    // check if module is enabled
    if ('<?= $escaper->escapeHtml($isEnabled) ?>' === '1') {
        // Get default filename according to environment or get forced one
        let cssFilename = ''

        if ('<?= $escaper->escapeHtml($block->isUsedPresetTheme())?>' === '1') {
            if ('<?= $escaper->escapeHtml($selectedTheme) ?>') {
                cssFilename = '<?= $escaper->escapeHtml($selectedTheme) ?>'
            }
        }

        if ('<?= $escaper->escapeHtml($block->isUsedCustomTheme())?>' === '1') {
            cssFilename = 'custom_admin'
        }

        if (cssFilename) {
            // load css stylesheet according to environment
            let generalUrl = '<?= $escaper->escapeHtml($cssPath) ?>' + '/' + cssFilename;

            let cssUrl = generalUrl + '.css';
            let cssMinifiedUrl = generalUrl + '.min.css';

            fetch(cssUrl, { method: 'HEAD' }).then(function(response) {
                if (response.ok) {
                    loadCss(cssUrl);
                } else {
                    loadCss(cssMinifiedUrl);
                }
            }).catch(function(error) {
                loadCss(cssMinifiedUrl);
            });
        }

        if (cssFilename === 'custom_admin') {
            // get the root element
            let root = document.querySelector(':root');

            let themeMain = '<?= $escaper->escapeHtml($mainColor) ?>'
            if (themeMain) {
                root.style.setProperty('--primarycolor', themeMain);
            }

            let secondaryColor = '<?= $escaper->escapeHtml($secondaryColor) ?>'
            if (secondaryColor) {
                root.style.setProperty('--secondarycolor', secondaryColor);
            }

            let tertiaryColor = '<?= $escaper->escapeHtml($tertiaryColor) ?>'
            if (tertiaryColor) {
                root.style.setProperty('--tertiarycolor', tertiaryColor);
            }

            let fontMain = '<?= $escaper->escapeHtml($fontMain) ?>'
            if (fontMain) {
                root.style.setProperty('--mainfontcolor', fontMain);
            }

            let fontSecondary = '<?= $escaper->escapeHtml($fontSecondary) ?>'
            if (fontSecondary) {
                root.style.setProperty('--secondaryfontcolor', fontSecondary);
            }
        }
    }
</script>
